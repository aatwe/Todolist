1) db.items.find()
	We used to read all documents inside items collection

2) How to read into app.js
	find documents ->sending over to list,ejs -> render in todolist

	
3) Mongoose.find()
	
	<ModelName>.find({conditions}, function(err, results){
 	//callback contains error and result if any
	//Use the result docs found	 
}) 
4) nodemon app.js
	a) //entire object being printed
	b) //on every run more items inserted. why? items.insertMany() reruns
	how to solve?
	1)  views- > List.ejs	//just render name field of each item
		How are we rendering each items?
		for loop -> tap into newListItems[i]
		each item is document inside items collection
		make it -> **newListItems[i].name**
-------------------------------------------------------------------------------------
		<% for (let i=0; i<newListItems.length; i++) {
		<div class= "item">
		 <input type= "checkbox">
		<p><%= newListItems[i].name  %> </p>
		</div>
	<% } %>
}>
______________________________________________________________________________________
const express = require("express");
const bodyParser = require("body-parser");
const mongoose = require("mongoose");
//remove to simplify //const date = require(__dirname + "date.js");

//Delete const bodyParser = require("body-parser");	
//Deleteconst date = require(__dirname + "/date.js");

const app = express();

app.set('view engine', 'ejs');

app.use(bodyParser.urlencoded({extended: true}));
app.use(express.static("public"));

//Schema
const itemsSchema = {
 			name : String
};
//Model
const Item = mongoose.model("Item")

//Create 3 new documents : dfault item in todolist
//document 1
const item1 = new Item({
 name:"Welcome to your Todolist"
})
//document 2
const item2 = new Item({
 name:"Hit + button to add a new item"
})
//document 3
const item3 = new Item({
 name:"Hit to delete an item"
})

const defaultItems = [item1, item2, item3];
	//Create new document from item model


//Insert 3 documents to array
Items.insertMany(defaultItems, function(err){
 if(err) {
    console.log();
}
    else{
    console.log("Successfully saved default items to database");
}
})

//Array of default objects
//Delete //const items = ["Buy Food", "Cook Food", "Eat Food"];
//Delete //const workItems = [];

app.get("/", function(req,res){
 //remove const day = date.getDate();	//we will render default list with title today
-------------------------------------------------------------------------------------------
//no condition -> want to find everything inside item collection
//where will we store found items? founditems
//when will this trigger? when we access home page/ root route 
Item.find({}, function(err, foundItems){
	res.render("list", "list", {listTitle: "Today", newListItems: foundItems});  
	console.log(founditems);
})
			
-------------------------------------------------------------------------------------------
//res.render("list", "list", {listTitle: day, newListItems: items});		//Remember we deleted items array, instead we wanna pass foundItems
});							//Also move res.render into callback
	
app.post("/", function(req,res){
 const item = req.body.newItem;

 if(req.body.list == "Work") {
 workItems.push(item);
 res.redirect("/work");
} else {
  items.push(item);
  res.redirect("/");
}
})